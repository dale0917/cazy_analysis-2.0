nextflow_process {

    name "Test Process RSEM_PREPAREREFERENCE"
    script "/workspace/nf-test/nf-test/modules/local/rsem/preparereference/preparereference.nf"
    process "RSEM_PREPAREREFERENCE"
    tag "modules"
    tag "modules_nfcore"
    tag "rsem"
    tag "rsem/preparereference"

    test("Should run without failures") {

        when {
            params {
                // define parameters here. Example:
                // outdir = "tests/results"
            }
            process {
                """
                input[0] = Channel.of([
                    [ id:'test_fasta' ],
                    [ file('/workspace/nf-test/nf-test/assets/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa', checkIfExists: true) ]
                ])
                input[1] = Channel.of([
                    [ id:'test_gtf' ],
                    [ file('/workspace/nf-test/nf-test/assets/Saccharomyces_cerevisiae.R64-1-1.113.gtf', checkIfExists: true) ]
                ])
                """
            }
        }

        then {
            assertAll(
                {   assert process.success },
                {
                    //lines to exclude Log.out from the snapshot
                    def outputDir = new File(process.out.index[0])
                    def filesExcludingLog = outputDir.listFiles().findAll { it.name != "Log.out" }

                    assert snapshot(filesExcludingLog).match()
                },

                {   assert snapshot(process.out.transcript_fasta).match("transcript_fasta") },
                {   assert snapshot(process.out.versions).match("versions") }

            )
        }

    }

}
